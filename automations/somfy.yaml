#        name: Raise Shade any wind  GE set threshold mph

- alias: 'Raise Shade any wind over threshold mph'
  initial_state: True
  trigger:
    - platform: template
      value_template: '{{ states.sensor.dark_sky_wind_speed.state | int >= states.sensor.wind_speed_threshold.state | int }}'
    - platform: template
      value_template: '{{ states.sensor.dark_sky_wind_gust.state | int >= states.sensor.wind_speed_threshold.state | int }}'
  condition:
    condition: state
    entity_id: switch.somfy
    state: 'on'
  action:
    - service: switch.turn_off
      entity_id:
      - switch.somfy
    - service: homeassistant.turn_on
      entity_id: input_boolean.shade_raised   
    - service: counter.increment 
      entity_id: counter.shade_raised_counter     
    - service: timer.start
      data_template:
        entity_id: "timer.somfy_raised_wind" 
        duration: '{{ states.input_number.shade_delay.state | multiply(60) |int}}' 
    - service: persistent_notification.create
      data:
        message: ' {{states.sensor.date_time.state}} Sun Shade Raised WS={{ states.sensor.dark_sky_wind_speed.state}} GUST={{ states.sensor.dark_sky_wind_gust.state}} TH={{ states.sensor.wind_speed_threshold.state}}'
        title: "Sun Shade Raised"


- alias: 'reset shade timer is wind above threshold'
  initial_state: True
  trigger:
    - platform: template
      value_template: '{{ states.sensor.dark_sky_wind_speed.state | int >= states.sensor.wind_speed_threshold.state | int }}'
    - platform: template
      value_template: '{{ states.sensor.dark_sky_wind_gust.state | int >= states.sensor.wind_speed_threshold.state | int }}'
  condition:
    condition: state
    entity_id: timer.somfy_raised_wind
    state: 'active'
  action:
    - service: counter.increment 
      entity_id: counter.wind_reset_counter  
    - service: timer.start
      data_template:
        entity_id: "timer.somfy_raised_wind" 
        duration: '{{ states.input_number.shade_delay.state | multiply(60) |int}}'  

##

- alias: 'Lower shade after wind raised'
  initial_state: True
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.somfy_raised_wind
  condition:
    - condition: state
      entity_id: switch.somfy
      state: 'off'
    - condition: numeric_state
      entity_id: counter.shade_raised_counter
      below: 4
#    - condition: template
#      value_template: '{{ states.sensor.dark_sky_wind_gust.state | int < states.sensor.wind_speed_threshold.state | int }}'
  action:
    - service: counter.reset
      entity_id: counter.wind_reset_counter    
    - service: switch.turn_on
      entity_id: switch.somfy
    - service: homeassistant.update_entity
      entity_id: sensor.alexadestinations          
    - service: notify.alexa_media
      data_template:
        target: "{{states.sensor.alexadestinations.state}}"
        data:
          type: announce
          #method: all
        message: "Pardon me, the wind has calmed so I have lowered the Patio Shade for the {{states.sensor.shade_raised_times_word.state}} time today.  Once again, I thought you might want to know that the Sun Shade was just lowered for the {{states.sensor.shade_raised_times_word.state}} time today."

     

- alias: 'Announce shade raised do to wind'
  initial_state: True
  trigger:
    platform: state
    entity_id: input_boolean.shade_raised  
    to: 'on'
  action:
    - service: homeassistant.turn_off
      entity_id: input_boolean.shade_raised  
    - service: homeassistant.update_entity
      entity_id: sensor.alexadestinations          
    - service: notify.alexa_media
      data_template:
        target: "{{states.sensor.alexadestinations.state}}"
        data:
          type: announce
          #method: all
        message: "Pardon me, but I thought you might want to know the Patio Shade was just raised due to high wind for the {{states.sensor.shade_raised_times_word.state}} time today.  Once again, I thought you might want to know that the Patio Shade was just Raised for the {{states.sensor.shade_raised_times_word.state}} time today."
      

- alias: 'Vacation mode activated raise Patio Shade'
  initial_state: True
  trigger:
    platform: state
    entity_id: input_boolean.on_vaca
    from: 'off'
    to: 'on'
  action:
    - service: switch.turn_off
      entity_id:
      - switch.somfy


- alias: 'reset motion shade counter'
  initial_state: True
  trigger:
    platform: time
    at: '23:59:59'
  action:
    - service: counter.reset
      entity_id: counter.shade_raised_counter      

- alias: 'zzzzz OCC sim'
  initial_state: False
  trigger:
    - platform: template
      value_template: '{{ states.sensor.time.state   == states.sensor.random_late_nite_time.state | replace(" ", "") }}' #works
    - platform: template
      value_template: '{{ states.sensor.time.state    == states.sensor.random_evening_time.state  | replace(" ", "") }}'
    - platform: template
      value_template: '{{ states.sensor.time.state    == states.sensor.random_afternoon_time.state  | replace(" ", "") }}'  # works
    - platform: template
      value_template: '{{ states.sensor.time.state   == states.sensor.random_morning_time.state  | replace(" ", "") }}'  # works
    - platform: template
      value_template: '{{ states.sensor.time.state   == states.sensor.random_early_morning_time.state  | replace(" ", "") }}' # works
  action:
    - service: homeassistant.update_entity
      entity_id: sensor.occupancy_simulation_entities
    - service: homeassistant.update_entity
      entity_id: sensor.occupancy_simulation_entity 
    - service: persistent_notification.create
      data:
        message: ' {{states.sensor.date__time.state}} Occupancy entitiesS={{ states.sensor.occupancy_simulation_entities.state}} entity={{ states.sensor.occupancy_simulation_entity.state}} TH={{ states.sensor.wind_speed_threshold.state}}'
        title: "Occupnacy info"      
