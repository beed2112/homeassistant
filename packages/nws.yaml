#################################################################################
#
#   This is the package for NWS ALERTS USING THE CUSTOM COMPONENT
#
#################################################################################


########################  SENSOR  ###############################################

sensor:
#  - platform: nws_alerts
#    zone_id: 'AZZ542, AZC013'
#  - platform: feedparser
#    name: NWS Alert RSS Feed
#    feed_url: 'https://alerts.weather.gov/cap/wwaatmget.php?x=AZZ542&y=0'
#    date_format: '%a, %b %d %I:%M %p'
#    inclusions:
#      - title
#      - summary
#      - cap_expires
#    #  - image
#    #  - language
#    #  - pubDate
#    #exclusions:
#    #  - language
#  #  TEST SENSORs  ##  
  - platform: nws_alerts
    name: NWS Alerts
    zone_id: 'TXC065'
  - platform: feedparser
    name: NWS Alerts
    feed_url: 'https://alerts.weather.gov/cap/wwaatmget.php?x=TXC065&y=0'
    date_format: '%a, %b %d %I:%M %p'
    inclusions:
     - title
     - summary
     - cap_expires
  # #  - image
  # #  - language
  # #  - pubDate
  # #exclusions:
  # #  - language
  - platform: template
    sensors:
      nws_alerts_2_are_active:
        friendly_name: NWS Alerts Are Active
        entity_id: sensor.nws_alerts_2
        value_template: >
          {% if states.sensor.nws_alerts_2.state | int > 0 %}
            on
          {% else %}
            off
          {% endif %}        
    
########################  AUTOMATION  ###########################################

automation:
  - alias: 'NWS Weather Alert Pop Up Control'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.nws_alerts_2
      - platform: homeassistant
        event: start
    condition:
      - condition: template
        value_template: '{{states.sensor.nws_alerts_2.state | int > 0}}'
      - condition: template
        value_template: '{{ trigger.to_state.state|float > trigger.from_state.state|float }}'
    action:
      service: script.nws_popup_on_wx_alert
      data_template:
        title: >
          {% if states.sensor.nws_alerts_2.attributes.title.split(' - ')[5] is defined %}
            "{{ states.sensor.nws_alerts_2.attributes.title.split(' - ')[5] }}"
          {% elif states.sensor.nws_alerts_2.attributes.title.split(' - ')[4] is defined %}
            "{{ states.sensor.nws_alerts_2.attributes.title.split(' - ')[4] }}"
          {% elif states.sensor.nws_alerts_2.attributes.title.split(' - ')[3] is defined %}
            "{{ states.sensor.nws_alerts_2.attributes.title.split(' - ')[3] }}"
          {% elif states.sensor.nws_alerts_2.attributes.title.split(' - ')[2] is defined %}
            "{{ states.sensor.nws_alerts_2.attributes.title.split(' - ')[2] }}"
          {% elif states.sensor.nws_alerts_2.attributes.title.split(' - ')[1] is defined %}
            "{{ states.sensor.nws_alerts_2.attributes.title.split(' - ')[1] }}"
          {% else %}
            "{{ states.sensor.nws_alerts_2.attributes.title.split(' - ')[0] }}"
          {% endif %}
        message: >
          {% if states.sensor.nws_alerts_2.attributes.display_desc.split('\n\n-\n\n')[5] is defined %}
            "{{ states.sensor.nws_alerts_2.attributes.display_desc.split('\n\n-\n\n')[5] }}"
          {% elif states.sensor.nws_alerts_2.attributes.display_desc.split('\n\n-\n\n')[4] is defined %}
            "{{ states.sensor.nws_alerts_2.attributes.display_desc.split('\n\n-\n\n')[4] }}"
          {% elif states.sensor.nws_alerts_2.attributes.display_desc.split('\n\n-\n\n')[3] is defined %}
            "{{ states.sensor.nws_alerts_2.attributes.display_desc.split('\n\n-\n\n')[3] }}"
          {% elif states.sensor.nws_alerts_2.attributes.display_desc.split('\n\n-\n\n')[2] is defined %}
            "{{ states.sensor.nws_alerts_2.attributes.display_desc.split('\n\n-\n\n')[2] }}"
          {% elif states.sensor.nws_alerts_2.attributes.display_desc.split('\n\n-\n\n')[1] is defined %}
            "{{ states.sensor.nws_alerts_2.attributes.display_desc.split('\n\n-\n\n')[1] }}"
          {% else %}
            "{{ states.sensor.nws_alerts_2.attributes.display_desc.split('\n\n-\n\n')[0] }}"
          {% endif %}
          
#  - alias: NWS Notification Weather Alert
#    initial_state: 'on'
#    trigger:
#      platform: state
#      entity_id: sensor.nws_alerts_2
#    condition:
#      - condition: template
#        value_template: '{{states.sensor.nws_alerts_2.state | int > 0}}'
#      - condition: template
#        value_template: '{{ trigger.to_state.state|float > trigger.from_state.state|float }}'
#    action:
#      - service: notify.pushbullet_notify
#        data_template:
#          message: >
#            {% if states.sensor.nws_alerts_2.attributes.title.split(' - ')[5] is defined %}
#              "NWS: {{ states.sensor.nws_alerts_2.attributes.title.split(' - ')[5] }}"
#            {% elif states.sensor.nws_alerts_2.attributes.title.split(' - ')[4] is defined %}
#              "NWS: {{ states.sensor.nws_alerts_2.attributes.title.split(' - ')[4] }}"
#            {% elif states.sensor.nws_alerts_2.attributes.title.split(' - ')[3] is defined %}
#              "NWS: {{ states.sensor.nws_alerts_2.attributes.title.split(' - ')[3] }}"
#            {% elif states.sensor.nws_alerts_2.attributes.title.split(' - ')[2] is defined %}
#              "NWS: {{ states.sensor.nws_alerts_2.attributes.title.split(' - ')[2] }}"
#            {% elif states.sensor.nws_alerts_2.attributes.title.split(' - ')[1] is defined %}
#              "NWS: {{ states.sensor.nws_alerts_2.attributes.title.split(' - ')[1] }}"
#            {% else %}
#              "NWS: {{ states.sensor.nws_alerts_2.attributes.title.split(' - ')[0] }}"
#            {% endif %}
            
  - alias: NWS Announce Weather Alert
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.nws_alerts_2
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{states.sensor.nws_alerts_2.state | int > 0}}"
#        - condition: template
#          value_template: '{{ trigger.to_state.state|float > trigger.from_state.state|float }}'
        - condition: template
          value_template: "{{ (('Severe' in states.sensor.nws_alerts_2.attributes.title) or ('Tornado' in states.sensor.nws_alerts_2.attributes.title)) and 'Warning' in states.sensor.nws_alerts_2.attributes.title }}"
    action:
      - service: media_player.volume_set
        data:
          entity_id:
            - media_player.den

          volume_level: 0.7
      - service: notify.alexa_media
        data_template:
          target: 
            - media_player.den
          data:
            type: announce 
          message: >
            {% if states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[5] is defined %}
              Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[5] }}
            {% elif states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[4] is defined %}
              Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[4] }}
            {% elif states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[3] is defined %}
              Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[3] }}
            {% elif states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[2] is defined %}
              Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[2] }}
            {% elif states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[1] is defined %}
              Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[1] }}
            {% else %}
              Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[0] }}
            {% endif %}
      - delay: '00:00:15'
      - service: notify.alexa_media
        data_template:
          target: 
            - media_player.den
          data:
            type: announce 
          message: >
            {% if states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[5] is defined %}
              Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[5] }}
            {% elif states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[4] is defined %}
              Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[4] }}
            {% elif states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[3] is defined %}
              Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[3] }}
            {% elif states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[2] is defined %}
              Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[2] }}
            {% elif states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[1] is defined %}
              Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[1] }}
            {% else %}
              Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts_2.attributes.spoken_desc.split('\n\n-\n\n')[0] }}
            {% endif %}

            
  - alias: NWS Announce Weather Alert for MBR
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.nws_alerts_2
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{states.sensor.nws_alerts_2.state | int > 0}}"
        - condition: template
          value_template: "{{ 'Tornado' in states.sensor.nws_alerts_2.attributes.title and 'Warning' in states.sensor.nws_alerts_2.attributes.title }}"
    action:
      - service: media_player.volume_set
        data:
          entity_id:
            - media_player.den
          volume_level: 0.7
      - service: notify.alexa_media
        data:
          target: media_player.den
          data:
            type: announce 
          message: "Attention!,,,Attention!,,,The National Weather Service Has issued a Tornado Warning for our area."
      - delay: '00:00:15'
      - service: notify.alexa_media
        data:
          target: media_player.den
          data:
            type: announce 
          message: "Attention!,,,Attention!,,,The National Weather Service Has issued a Tornado Warning for our area."

         

  - alias: NWS Dismiss Persistent Notification
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: input_boolean.bool_9
        to: 'off'
    action:
      - service: persistent_notification.dismiss
        data:
          notification_id: "nwswxalert"
            
         
#################################  SCRIPT  ###################################
          
script:
  nws_popup_on_wx_alert:
    alias: NWS Weather Alert Pop Up
    sequence:
        ## Dismiss any current alert so the UI isn't filled 
        ## up with these if there are more then one.
        ## Only show the latest alert
      - service: persistent_notification.dismiss
        data:
          notification_id: "nwswxalert"
        ## Create a new persistant notification in the UI for a new alert
      - service_template: >
          {% if states.sensor.nws_alerts_2.state != '0' %}
            persistent_notification.create
          {% endif %}
        data_template:
          notification_id: "nwswxalert"
          message: "{{ message }}"
          title: '{{ title }}'
      - service: homeassistant.turn_on
        entity_id: input_boolean.bool_9
###################################################################################
